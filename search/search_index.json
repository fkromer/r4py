{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>This project is inspired by Rust for C++ Programmers and several blog posts I've read about \"Rust for Python Programmers\".</p> <p>It has the purpose of:</p> <ul> <li>Showcasing the main differences (from a concepts point of view) between the Python and the Rust programming language.</li> <li>Promote the adoption of Rust for the implementation of performance critical parts of Python packages.</li> </ul>"},{"location":"building/","title":"Build pipelines","text":""},{"location":"building/#public-rust-only-code-python-package-github-pypi","title":"Public Rust-only code Python package: GitHub -&gt; PyPi","text":"<p>A good example of a Python package public-ally deployed to PyPi is uuidt. The source of the project on GitHub isaacharrisholt/uuidt contains Rust code in <code>uuidt.src.lib.rs</code>. There is no Python source code contained at all. The Python package is built for MacOS, several Linux architectures and Windows.</p> uuidt/src/lib.rs<pre><code>#![allow(clippy::upper_case_acronyms)]\n\nuse std::u128;\nuse gethostname::gethostname;\nuse pyo3::prelude::*; // (1)\nuse radix_fmt::radix_36;\nuse rand::{distributions::Alphanumeric, Rng};\n\nfn string_radix_36(string: String, length: usize) -&gt; String {\n    format!(\n        \"{:0&gt;length$}\",\n        format!(\n            \"{}\",\n            radix_36(string.into_bytes().iter().map(|&amp;b| b as u16).sum::&lt;u16&gt;())\n        )\n        .to_lowercase()\n    )\n}\n\nfn timestamp_radix_36(timestamp: u128) -&gt; (String, String) {\n    let timestamp_string = format!(\"{}\", radix_36(timestamp as u64)).to_lowercase();\n    let part_1 = timestamp_string[0..8].to_string();\n    let part_2 = timestamp_string[8..12].to_string();\n    (part_1, part_2)\n}\n\n#[pyclass(frozen, module = \"uuidt\", get_all, freelist = 10)] // (2)\nstruct UUIDT {\n    namespace: String,\n    timestamp: u128,\n    hostname: String,\n    random_chars: String,\n}\n\n#[pymethods] // (3)\nimpl UUIDT {\n    #[new]\n    fn new() -&gt; PyResult&lt;Self&gt; {\n        Err(PyErr::new::&lt;pyo3::exceptions::PyNotImplementedError, _&gt;(\n            \"Cannot instantiate UUIDT directly. Use uuidt() instead.\",\n        ))\n    }\n\n    fn __str__(&amp;self) -&gt; PyResult&lt;String&gt; {\n        let (timestamp_part_1, timestamp_part_2) = timestamp_radix_36(self.timestamp);\n        let namespace_radix_36 = string_radix_36(self.namespace.clone(), 4);\n        let hostname_radix_36 = string_radix_36(self.hostname.clone(), 4);\n\n        Ok(format!(\n            \"{}-{}-{}-{}-{}\",\n            timestamp_part_1,\n            timestamp_part_2,\n            namespace_radix_36,\n            hostname_radix_36,\n            self.random_chars\n        ))\n    }\n}\n\n/// Creates a new UUIDT object.\n#[pyfunction] // (4)\nfn new(namespace: String) -&gt; PyResult&lt;UUIDT&gt; {\n    if namespace.is_empty() {\n        return Err(PyErr::new::&lt;pyo3::exceptions::PyValueError, _&gt;(\n            \"Namespace cannot be empty.\",\n        ));\n    }\n\n    let hostname = gethostname().into_string().unwrap();\n    let timestamp = std::time::SystemTime::now()\n        .duration_since(std::time::UNIX_EPOCH)\n        .unwrap()\n        .as_nanos();\n\n    let random_chars = rand::thread_rng()\n        .sample_iter(&amp;Alphanumeric)\n        .take(12)\n        .map(char::from)\n        .collect::&lt;String&gt;()\n        .to_lowercase();\n\n    Ok(UUIDT {\n        namespace,\n        timestamp,\n        hostname,\n        random_chars,\n    })\n}\n\n/// Extract the timestamp from a UUIDT string.\n#[pyfunction] // (5)\nfn extract_timestamp(uuidt: String) -&gt; PyResult&lt;u128&gt; { // (6)\n    if uuidt.is_empty() {\n        return Err(PyErr::new::&lt;pyo3::exceptions::PyValueError, _&gt;( // (7)\n            \"UUIDT cannot be empty.\",\n        ));\n    }\n\n    let uuidt_parts: Vec&lt;&amp;str&gt; = uuidt.split('-').collect();\n    if uuidt_parts.len() != 5 {\n        return Err(PyErr::new::&lt;pyo3::exceptions::PyValueError, _&gt;(\n            \"Invalid UUIDT.\",\n        ));\n    }\n\n    let timestamp_part_1 = uuidt_parts[0];\n    let timestamp_part_2 = uuidt_parts[1];\n\n    let timestamp = format!(\"{}{}\", timestamp_part_1, timestamp_part_2);\n    match u128::from_str_radix(&amp;timestamp, 36) {\n        Ok(timestamp) =&gt; Ok(timestamp),\n        Err(_) =&gt; Err(PyErr::new::&lt;pyo3::exceptions::PyValueError, _&gt;(\n            \"Invalid UUIDT.\",\n        )),\n    }\n}\n\n/// Timestamp-orderable UUIDs for Python, written in Rust.\n#[pymodule] // (8)\nfn uuidt(_py: Python, m: &amp;PyModule) -&gt; PyResult&lt;()&gt; {\n    m.add_function(wrap_pyfunction!(new, m)?)?;\n    m.add_function(wrap_pyfunction!(extract_timestamp, m)?)?;\n    m.add_class::&lt;UUIDT&gt;()?;\n    Ok(())\n}\n</code></pre> <ol> <li>pyo3::prelude - The purpose of this module is to alleviate imports of many commonly used items of the PyO3 crate by adding a glob import to the top of pyo3 heavy modules.</li> <li><code>#[pyclass]</code> - Exposes the Rust struct <code>UUIDT</code> as Python class.</li> <li><code>#[pymethods]</code> - Exposes Rust methods of struct <code>UUIDT</code> as Python class methods.</li> <li>Exposes the Rust function as Python function.</li> <li>Exposes the Rust function as Python function.</li> <li><code>PyResult</code> implements the Python function return.</li> <li><code>PyValueError</code> implements a Python <code>ValueError</code> exception.</li> <li><code>#[pymodule]</code> exposes a Python module.</li> </ol> <p>GitHub Actions are used as CI system to build the Python packages for the different operating systems and architectures. The Rust code is built into a Python package providing a Python API using maturin (via <code>PyO3/maturin-action@v1</code>).</p> .github/workflows/uuidt.yml<pre><code>name: \"Release uuidt\"\n\non:\n  workflow_dispatch:\n  release:\n    types: [published]\n\npermissions:\n  contents: read\n\nenv:\n  PYTHON_VERSION: 3.7\n\njobs:\n  linux:\n    runs-on: ubuntu-latest\n    strategy:\n      matrix:\n        target: [x86_64, x86, aarch64, armv7, s390x, ppc64le]\n    steps:\n      - uses: actions/checkout@v3\n      - uses: actions/setup-python@v4\n        with:\n          python-version: ${{ env.PYTHON_VERSION }}\n      - name: Build wheels\n        uses: PyO3/maturin-action@v1\n        with:\n          target: ${{ matrix.target }}\n          args: --release --out dist --find-interpreter\n          sccache: 'true'\n          manylinux: auto\n      - name: Upload wheels\n        uses: actions/upload-artifact@v3\n        with:\n          name: wheels\n          path: dist\n\n  windows:\n    runs-on: windows-latest\n    strategy:\n      matrix:\n        target: [x64, x86]\n    steps:\n      - uses: actions/checkout@v3\n      - uses: actions/setup-python@v4\n        with:\n          python-version: ${{ env.PYTHON_VERSION }}\n          architecture: ${{ matrix.target }}\n      - name: Build wheels\n        uses: PyO3/maturin-action@v1\n        with:\n          target: ${{ matrix.target }}\n          args: --release --out dist --find-interpreter\n          sccache: 'true'\n      - name: Upload wheels\n        uses: actions/upload-artifact@v3\n        with:\n          name: wheels\n          path: dist\n\n  macos:\n    runs-on: macos-latest\n    strategy:\n      matrix:\n        target: [x86_64, aarch64]\n    steps:\n      - uses: actions/checkout@v3\n      - uses: actions/setup-python@v4\n        with:\n          python-version: ${{ env.PYTHON_VERSION }}\n      - name: Build wheels\n        uses: PyO3/maturin-action@v1\n        with:\n          target: ${{ matrix.target }}\n          args: --release --out dist --find-interpreter\n          sccache: 'true'\n      - name: Upload wheels\n        uses: actions/upload-artifact@v3\n        with:\n          name: wheels\n          path: dist\n\n  sdist:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v3\n      - name: Build sdist\n        uses: PyO3/maturin-action@v1\n        with:\n          command: sdist\n          args: --out dist\n      - name: Upload sdist\n        uses: actions/upload-artifact@v3\n        with:\n          name: wheels\n          path: dist\n\n  release:\n    name: Release\n    runs-on: ubuntu-latest\n    needs: [linux, windows, macos, sdist]\n    steps:\n      - uses: actions/download-artifact@v3\n        with:\n          name: wheels\n      - name: Publish to PyPI\n        uses: PyO3/maturin-action@v1\n        env:\n          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}\n        with:\n          command: upload\n          args: --skip-existing *\n</code></pre> <p>Finally the package is uploaded to PyPi \u2192 project/uuidt.</p>"},{"location":"contributing/","title":"Contributing","text":""},{"location":"contributing/#contributing-to-r4py","title":"Contributing to r4py","text":"<p>Welcome! We're happy to have you here. Thank you in advance for your contribution to r4py.</p>"},{"location":"contributing/#local-development-environment-linux-macos-windows","title":"Local development environment (Linux, MacOS, Windows)","text":""},{"location":"contributing/#setup","title":"Setup","text":"<ul> <li>Install <code>uv</code>.</li> <li>Create virtual environment with <code>uv venv</code>, <code>source .venv/bin/activate</code>, <code>uv pip install --require-hashes -r requirements.txt</code>.</li> </ul>"},{"location":"contributing/#development","title":"Development","text":"<ul> <li>Fork this project.</li> <li>Get familiar with mkdocs.org and Material for MkDocs (mkdocs-material).</li> <li>Add/change/remove content in <code>docs</code>.</li> <li>Serve the website locally using <code>mkdocs serve</code>, visit <code>http://127.0.0.1:8000/</code> and check if your additions/changes/removes are ok.</li> <li>Push changes to your GitHub repo fork,</li> <li>Create a PR.</li> </ul>"},{"location":"contributing/#remote-development-environment-browser-gitpod","title":"Remote development environment (Browser -&gt; GitPod)","text":""},{"location":"contributing/#setup_1","title":"Setup","text":"<ul> <li>Login into GitPod via GitHub (it's free)</li> <li>Fork this project.</li> <li>In <code>README.md</code> adjust <code>[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/#https://github.com/fkromer/r4py)</code> to <code>[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/#https://github.com/&lt;your-username&gt;/r4py)</code>.</li> <li>Open the project in GitPod via \"Open in GitPod\" button in <code>README.md</code>.</li> </ul>"},{"location":"contributing/#development_1","title":"Development","text":"<p>Same as in <code>Local development environment</code>.</p>"},{"location":"contributing/#build-dependencies","title":"Build dependencies","text":""},{"location":"contributing/#adding-mkdocs-features","title":"Adding mkdocs features","text":"<p>If you want to add <code>mkdocs</code> features which require adding Python package dependencies:</p> <ul> <li>Add the Python package to the venv with <code>uv add &lt;your-mkdocs-package-of-choice&gt;</code>. This will update the <code>uv.lock</code> file.</li> <li>Update dependencies in <code>requirements.txt</code> with <code>uv pip compile --generate-hashes pyproject.toml -o requirements.txt</code>.</li> <li>Commit <code>uv.lock</code> as well as <code>requirements.txt</code>.</li> </ul>"},{"location":"contributing/#license-considerations","title":"License considerations","text":"<p>Please consider that your work will be licensed under a license which promotes contribution and prevents from misuse.</p>"},{"location":"contributing/#license","title":"License","text":"<p>Attribution-NonCommercial-NoDerivatives 4.0 International</p> <p>=======================================================================</p> <p>Creative Commons Corporation (\"Creative Commons\") is not a law firm and does not provide legal services or legal advice. Distribution of Creative Commons public licenses does not create a lawyer-client or other relationship. Creative Commons makes its licenses and related information available on an \"as-is\" basis. Creative Commons gives no warranties regarding its licenses, any material licensed under their terms and conditions, or any related information. Creative Commons disclaims all liability for damages resulting from their use to the fullest extent possible.</p> <p>Using Creative Commons Public Licenses</p> <p>Creative Commons public licenses provide a standard set of terms and conditions that creators and other rights holders may use to share original works of authorship and other material subject to copyright and certain other rights specified in the public license below. The following considerations are for informational purposes only, are not exhaustive, and do not form part of our licenses.</p> <pre><code> Considerations for licensors: Our public licenses are\n intended for use by those authorized to give the public\n permission to use material in ways otherwise restricted by\n copyright and certain other rights. Our licenses are\n irrevocable. Licensors should read and understand the terms\n and conditions of the license they choose before applying it.\n Licensors should also secure all rights necessary before\n applying our licenses so that the public can reuse the\n material as expected. Licensors should clearly mark any\n material not subject to the license. This includes other CC-\n licensed material, or material used under an exception or\n limitation to copyright. More considerations for licensors:\nwiki.creativecommons.org/Considerations_for_licensors\n\n Considerations for the public: By using one of our public\n licenses, a licensor grants the public permission to use the\n licensed material under specified terms and conditions. If\n the licensor's permission is not necessary for any reason--for\n example, because of any applicable exception or limitation to\n copyright--then that use is not regulated by the license. Our\n licenses grant only permissions under copyright and certain\n other rights that a licensor has authority to grant. Use of\n the licensed material may still be restricted for other\n reasons, including because others have copyright or other\n rights in the material. A licensor may make special requests,\n such as asking that all changes be marked or described.\n Although not required by our licenses, you are encouraged to\n respect those requests where reasonable. More considerations\n for the public:\nwiki.creativecommons.org/Considerations_for_licensees\n</code></pre> <p>=======================================================================</p> <p>Creative Commons Attribution-NonCommercial-NoDerivatives 4.0 International Public License</p> <p>By exercising the Licensed Rights (defined below), You accept and agree to be bound by the terms and conditions of this Creative Commons Attribution-NonCommercial-NoDerivatives 4.0 International Public License (\"Public License\"). To the extent this Public License may be interpreted as a contract, You are granted the Licensed Rights in consideration of Your acceptance of these terms and conditions, and the Licensor grants You such rights in consideration of benefits the Licensor receives from making the Licensed Material available under these terms and conditions.</p> <p>Section 1 -- Definitions.</p> <p>a. Adapted Material means material subject to Copyright and Similar      Rights that is derived from or based upon the Licensed Material      and in which the Licensed Material is translated, altered,      arranged, transformed, or otherwise modified in a manner requiring      permission under the Copyright and Similar Rights held by the      Licensor. For purposes of this Public License, where the Licensed      Material is a musical work, performance, or sound recording,      Adapted Material is always produced where the Licensed Material is      synched in timed relation with a moving image.</p> <p>b. Copyright and Similar Rights means copyright and/or similar rights      closely related to copyright including, without limitation,      performance, broadcast, sound recording, and Sui Generis Database      Rights, without regard to how the rights are labeled or      categorized. For purposes of this Public License, the rights      specified in Section 2(b)(1)-(2) are not Copyright and Similar      Rights.</p> <p>c. Effective Technological Measures means those measures that, in the      absence of proper authority, may not be circumvented under laws      fulfilling obligations under Article 11 of the WIPO Copyright      Treaty adopted on December 20, 1996, and/or similar international      agreements.</p> <p>d. Exceptions and Limitations means fair use, fair dealing, and/or      any other exception or limitation to Copyright and Similar Rights      that applies to Your use of the Licensed Material.</p> <p>e. Licensed Material means the artistic or literary work, database,      or other material to which the Licensor applied this Public      License.</p> <p>f. Licensed Rights means the rights granted to You subject to the      terms and conditions of this Public License, which are limited to      all Copyright and Similar Rights that apply to Your use of the      Licensed Material and that the Licensor has authority to license.</p> <p>g. Licensor means the individual(s) or entity(ies) granting rights      under this Public License.</p> <p>h. NonCommercial means not primarily intended for or directed towards      commercial advantage or monetary compensation. For purposes of      this Public License, the exchange of the Licensed Material for      other material subject to Copyright and Similar Rights by digital      file-sharing or similar means is NonCommercial provided there is      no payment of monetary compensation in connection with the      exchange.</p> <p>i. Share means to provide material to the public by any means or      process that requires permission under the Licensed Rights, such      as reproduction, public display, public performance, distribution,      dissemination, communication, or importation, and to make material      available to the public including in ways that members of the      public may access the material from a place and at a time      individually chosen by them.</p> <p>j. Sui Generis Database Rights means rights other than copyright      resulting from Directive 96/9/EC of the European Parliament and of      the Council of 11 March 1996 on the legal protection of databases,      as amended and/or succeeded, as well as other essentially      equivalent rights anywhere in the world.</p> <p>k. You means the individual or entity exercising the Licensed Rights      under this Public License. Your has a corresponding meaning.</p> <p>Section 2 -- Scope.</p> <p>a. License grant.</p> <pre><code>   1. Subject to the terms and conditions of this Public License,\n      the Licensor hereby grants You a worldwide, royalty-free,\n      non-sublicensable, non-exclusive, irrevocable license to\n      exercise the Licensed Rights in the Licensed Material to:\n\n        a. reproduce and Share the Licensed Material, in whole or\n           in part, for NonCommercial purposes only; and\n\n        b. produce and reproduce, but not Share, Adapted Material\n           for NonCommercial purposes only.\n\n   2. Exceptions and Limitations. For the avoidance of doubt, where\n      Exceptions and Limitations apply to Your use, this Public\n      License does not apply, and You do not need to comply with\n      its terms and conditions.\n\n   3. Term. The term of this Public License is specified in Section\n      6(a).\n\n   4. Media and formats; technical modifications allowed. The\n      Licensor authorizes You to exercise the Licensed Rights in\n      all media and formats whether now known or hereafter created,\n      and to make technical modifications necessary to do so. The\n      Licensor waives and/or agrees not to assert any right or\n      authority to forbid You from making technical modifications\n      necessary to exercise the Licensed Rights, including\n      technical modifications necessary to circumvent Effective\n      Technological Measures. For purposes of this Public License,\n      simply making modifications authorized by this Section 2(a)\n      (4) never produces Adapted Material.\n\n   5. Downstream recipients.\n\n        a. Offer from the Licensor -- Licensed Material. Every\n           recipient of the Licensed Material automatically\n           receives an offer from the Licensor to exercise the\n           Licensed Rights under the terms and conditions of this\n           Public License.\n\n        b. No downstream restrictions. You may not offer or impose\n           any additional or different terms or conditions on, or\n           apply any Effective Technological Measures to, the\n           Licensed Material if doing so restricts exercise of the\n           Licensed Rights by any recipient of the Licensed\n           Material.\n\n   6. No endorsement. Nothing in this Public License constitutes or\n      may be construed as permission to assert or imply that You\n      are, or that Your use of the Licensed Material is, connected\n      with, or sponsored, endorsed, or granted official status by,\n      the Licensor or others designated to receive attribution as\n      provided in Section 3(a)(1)(A)(i).\n</code></pre> <p>b. Other rights.</p> <pre><code>   1. Moral rights, such as the right of integrity, are not\n      licensed under this Public License, nor are publicity,\n      privacy, and/or other similar personality rights; however, to\n      the extent possible, the Licensor waives and/or agrees not to\n      assert any such rights held by the Licensor to the limited\n      extent necessary to allow You to exercise the Licensed\n      Rights, but not otherwise.\n\n   2. Patent and trademark rights are not licensed under this\n      Public License.\n\n   3. To the extent possible, the Licensor waives any right to\n      collect royalties from You for the exercise of the Licensed\n      Rights, whether directly or through a collecting society\n      under any voluntary or waivable statutory or compulsory\n      licensing scheme. In all other cases the Licensor expressly\n      reserves any right to collect such royalties, including when\n      the Licensed Material is used other than for NonCommercial\n      purposes.\n</code></pre> <p>Section 3 -- License Conditions.</p> <p>Your exercise of the Licensed Rights is expressly made subject to the following conditions.</p> <p>a. Attribution.</p> <pre><code>   1. If You Share the Licensed Material, You must:\n\n        a. retain the following if it is supplied by the Licensor\n           with the Licensed Material:\n\n             i. identification of the creator(s) of the Licensed\n                Material and any others designated to receive\n                attribution, in any reasonable manner requested by\n                the Licensor (including by pseudonym if\n                designated);\n\n            ii. a copyright notice;\n\n           iii. a notice that refers to this Public License;\n\n            iv. a notice that refers to the disclaimer of\n                warranties;\n\n             v. a URI or hyperlink to the Licensed Material to the\n                extent reasonably practicable;\n\n        b. indicate if You modified the Licensed Material and\n           retain an indication of any previous modifications; and\n\n        c. indicate the Licensed Material is licensed under this\n           Public License, and include the text of, or the URI or\n           hyperlink to, this Public License.\n\n      For the avoidance of doubt, You do not have permission under\n      this Public License to Share Adapted Material.\n\n   2. You may satisfy the conditions in Section 3(a)(1) in any\n      reasonable manner based on the medium, means, and context in\n      which You Share the Licensed Material. For example, it may be\n      reasonable to satisfy the conditions by providing a URI or\n      hyperlink to a resource that includes the required\n      information.\n\n   3. If requested by the Licensor, You must remove any of the\n      information required by Section 3(a)(1)(A) to the extent\n      reasonably practicable.\n</code></pre> <p>Section 4 -- Sui Generis Database Rights.</p> <p>Where the Licensed Rights include Sui Generis Database Rights that apply to Your use of the Licensed Material:</p> <p>a. for the avoidance of doubt, Section 2(a)(1) grants You the right      to extract, reuse, reproduce, and Share all or a substantial      portion of the contents of the database for NonCommercial purposes      only and provided You do not Share Adapted Material;</p> <p>b. if You include all or a substantial portion of the database      contents in a database in which You have Sui Generis Database      Rights, then the database in which You have Sui Generis Database      Rights (but not its individual contents) is Adapted Material; and</p> <p>c. You must comply with the conditions in Section 3(a) if You Share      all or a substantial portion of the contents of the database.</p> <p>For the avoidance of doubt, this Section 4 supplements and does not replace Your obligations under this Public License where the Licensed Rights include other Copyright and Similar Rights.</p> <p>Section 5 -- Disclaimer of Warranties and Limitation of Liability.</p> <p>a. UNLESS OTHERWISE SEPARATELY UNDERTAKEN BY THE LICENSOR, TO THE      EXTENT POSSIBLE, THE LICENSOR OFFERS THE LICENSED MATERIAL AS-IS      AND AS-AVAILABLE, AND MAKES NO REPRESENTATIONS OR WARRANTIES OF      ANY KIND CONCERNING THE LICENSED MATERIAL, WHETHER EXPRESS,      IMPLIED, STATUTORY, OR OTHER. THIS INCLUDES, WITHOUT LIMITATION,      WARRANTIES OF TITLE, MERCHANTABILITY, FITNESS FOR A PARTICULAR      PURPOSE, NON-INFRINGEMENT, ABSENCE OF LATENT OR OTHER DEFECTS,      ACCURACY, OR THE PRESENCE OR ABSENCE OF ERRORS, WHETHER OR NOT      KNOWN OR DISCOVERABLE. WHERE DISCLAIMERS OF WARRANTIES ARE NOT      ALLOWED IN FULL OR IN PART, THIS DISCLAIMER MAY NOT APPLY TO YOU.</p> <p>b. TO THE EXTENT POSSIBLE, IN NO EVENT WILL THE LICENSOR BE LIABLE      TO YOU ON ANY LEGAL THEORY (INCLUDING, WITHOUT LIMITATION,      NEGLIGENCE) OR OTHERWISE FOR ANY DIRECT, SPECIAL, INDIRECT,      INCIDENTAL, CONSEQUENTIAL, PUNITIVE, EXEMPLARY, OR OTHER LOSSES,      COSTS, EXPENSES, OR DAMAGES ARISING OUT OF THIS PUBLIC LICENSE OR      USE OF THE LICENSED MATERIAL, EVEN IF THE LICENSOR HAS BEEN      ADVISED OF THE POSSIBILITY OF SUCH LOSSES, COSTS, EXPENSES, OR      DAMAGES. WHERE A LIMITATION OF LIABILITY IS NOT ALLOWED IN FULL OR      IN PART, THIS LIMITATION MAY NOT APPLY TO YOU.</p> <p>c. The disclaimer of warranties and limitation of liability provided      above shall be interpreted in a manner that, to the extent      possible, most closely approximates an absolute disclaimer and      waiver of all liability.</p> <p>Section 6 -- Term and Termination.</p> <p>a. This Public License applies for the term of the Copyright and      Similar Rights licensed here. However, if You fail to comply with      this Public License, then Your rights under this Public License      terminate automatically.</p> <p>b. Where Your right to use the Licensed Material has terminated under      Section 6(a), it reinstates:</p> <pre><code>   1. automatically as of the date the violation is cured, provided\n      it is cured within 30 days of Your discovery of the\n      violation; or\n\n   2. upon express reinstatement by the Licensor.\n\n For the avoidance of doubt, this Section 6(b) does not affect any\n right the Licensor may have to seek remedies for Your violations\n of this Public License.\n</code></pre> <p>c. For the avoidance of doubt, the Licensor may also offer the      Licensed Material under separate terms or conditions or stop      distributing the Licensed Material at any time; however, doing so      will not terminate this Public License.</p> <p>d. Sections 1, 5, 6, 7, and 8 survive termination of this Public      License.</p> <p>Section 7 -- Other Terms and Conditions.</p> <p>a. The Licensor shall not be bound by any additional or different      terms or conditions communicated by You unless expressly agreed.</p> <p>b. Any arrangements, understandings, or agreements regarding the      Licensed Material not stated herein are separate from and      independent of the terms and conditions of this Public License.</p> <p>Section 8 -- Interpretation.</p> <p>a. For the avoidance of doubt, this Public License does not, and      shall not be interpreted to, reduce, limit, restrict, or impose      conditions on any use of the Licensed Material that could lawfully      be made without permission under this Public License.</p> <p>b. To the extent possible, if any provision of this Public License is      deemed unenforceable, it shall be automatically reformed to the      minimum extent necessary to make it enforceable. If the provision      cannot be reformed, it shall be severed from this Public License      without affecting the enforceability of the remaining terms and      conditions.</p> <p>c. No term or condition of this Public License will be waived and no      failure to comply consented to unless expressly agreed to by the      Licensor.</p> <p>d. Nothing in this Public License constitutes or may be interpreted      as a limitation upon, or waiver of, any privileges and immunities      that apply to the Licensor or You, including from the legal      processes of any jurisdiction or authority.</p> <p>=======================================================================</p> <p>Creative Commons is not a party to its public licenses. Notwithstanding, Creative Commons may elect to apply one of its public licenses to material it publishes and in those instances will be considered the \u201cLicensor.\u201d The text of the Creative Commons public licenses is dedicated to the public domain under the CC0 Public Domain Dedication. Except for the limited purpose of indicating that material is shared under a Creative Commons public license or as otherwise permitted by the Creative Commons policies published at creativecommons.org/policies, Creative Commons does not authorize the use of the trademark \"Creative Commons\" or any other trademark or logo of Creative Commons without its prior written consent including, without limitation, in connection with any unauthorized modifications to any of its public licenses or any other arrangements, understandings, or agreements concerning use of licensed material. For the avoidance of doubt, this paragraph does not form part of the public licenses.</p> <p>Creative Commons may be contacted at creativecommons.org.</p>"},{"location":"donating/","title":"Donating","text":"<p>If you would like to donate a coffee or two, you are very welcome to do so:</p> <p></p>"},{"location":"ecosystem/","title":"Ecosystem","text":""},{"location":"ecosystem/#cheat-sheet","title":"Cheat Sheet","text":""},{"location":"ecosystem/#tooling","title":"Tooling","text":"<p>W.r.t. tooling the Rust ecosystem seems to be more consistent than the Python ecosystem.</p> Purpose Python Rust Package Management <code>uv</code> <code>cargo</code> SBOM Generation (SPDX) ? <code>cargo spdx</code> via cargo-spdx SBOM Generation (CycloneDX) ? <code>cargo cyclonedx</code> via cargo-cyclonedx Linting (code) <code>ruff check</code> (via linter rule selection for a lot of drop-in tool replacements) <code>cargo clippy</code> (via clippy) Formatting (syntax) <code>ruff format</code> (in a black compatible manner) <code>cargo fmt</code> (via rustfmt) Formatting (imports) <code>ruff format</code> (via <code>select = [\"I\"]</code>) <code>cargo fmt</code> (via rustfmt) Formatting (docstring code examples) <code>ruff format</code> ? Static Type Checking <code>mypy</code> (not required, handled by compiler) Package Documentation Generation mkdocs-material or sphinx <code>cargo doc</code>/<code>cargo rustdoc</code> Package API Generation mkdocs-material + mkdocstrings or sphinx + sphinx.ext.autodoc <code>cargo doc</code>/<code>cargo rustdoc</code>"},{"location":"ecosystem/#ides","title":"IDEs","text":"Purpose Python Rust Full Blown PyCharm RustRover VSCode Extensions: ms-python.python Extensions: rust-lang.rust-analyzer Emacs Elpy rust-analyzer Vim vim-lsp rust-analyzer Zed natively via tree-sitter-python and pyright natively via tree-sitter-rust and rust-analyzer"},{"location":"ecosystem/#debugging","title":"Debugging","text":"Purpose Python Rust Poor Man's Debugging pysnooper"},{"location":"ecosystem/#logging","title":"Logging","text":"Purpose Python Rust Logging loguru log Structured Logging structlog slog Application Level Tracing ? tracing"},{"location":"ecosystem/#testing","title":"Testing","text":"Purpose Python Rust Unit Testing pytest (cargo test) Code Coverage Checking coverage tarpaulin Property Based Testing hypothesis proptest Snapshot Testing syrupy (pytest plugin) insta"},{"location":"inspiration/","title":"Inspiration","text":"<p>More and more Python packages adapt the usage of Rust for performance (latency) critical parts of the source code.</p> <ul> <li>Granian - A Rust HTTP server for Python applications.</li> <li>Polars - Dataframes powered by a multithreaded, vectorized query engine, written in Rust.</li> <li>Pydantic (+ pydantic-core) - Data validation using Python type hints.</li> <li>uuidt - Timestamp-orderable UUIDs for Python, written in Rust.</li> </ul>"},{"location":"resources/","title":"Books","text":"<ul> <li>Speed Up Your Python with Rust</li> </ul>"},{"location":"resources/#videos","title":"Videos","text":"<ul> <li>Using Rust to write Python modules (RustNL 2023)</li> <li>Rust for Python Developers (Swiss Python Summit 2022)</li> </ul>"}]}